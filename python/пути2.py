def count_paths(n, m):
    # Инициализация динамической таблицы
    # dp[i][j][k], где k: 0 — последний шаг горизонтальный, 1 — вертикальный
    dp = [[[0] * 2 for _ in range(m + 1)] for _ in range(n + 1)]

    # Базовый случай: начальная точка
    dp[0][0][0] = 1  # Можно начать с горизонтального шага
    dp[0][0][1] = 1  # Можно начать с вертикального шага

    for i in range(n + 1):
        for j in range(m + 1):
            if i == 0 and j == 0:
                continue  # Пропускаем начальную точку

            # Если последний шаг был горизонтальным
            if i > 0:
                dp[i][j][0] += dp[i - 1][j][0] + dp[i - 1][j][1]

            # Если последний шаг был вертикальным
            if j > 0:
                dp[i][j][1] += dp[i][j - 1][0]  # Нельзя добавлять вертикальный шаг после вертикального

    # Общее количество путей
    return dp[n][m][0] + dp[n][m][1]

# Размер сетки
n = 16
m = 16

# Количество путей
paths = count_paths(n, m)

print(f"Количество путей с ограничением: {paths}")